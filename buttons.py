# –ö–Ω–æ–ø–∫–∏
from telebot import types

# –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞
def num_button():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    but1 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Äüìû',
                                request_contact=True)
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(but1)
    return kb

# –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu(products):
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=2)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    cart = types.InlineKeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞üõí', callback_data='cart')
    all_products = [types.InlineKeyboardButton(text=f'{i[1]}', callback_data=i[0])
                    for i in products]
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(*all_products)
    kb.row(cart)
    return kb

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª-–≤–∞ —Ç–æ–≤–∞—Ä–∞
def choose_pr_count(pr_count, plus_or_minus='', amount=1):
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=3)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    plus = types.InlineKeyboardButton(text='+', callback_data='increment')
    minus = types.InlineKeyboardButton(text='-', callback_data='decrement')
    count = types.InlineKeyboardButton(text=str(amount), callback_data=str(amount))
    back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='back')
    to_cart = types.InlineKeyboardButton(text='–í –∫–æ—Ä–∑–∏–Ω—Éüõí', callback_data='to_cart')
    # –ê–ª–≥–æ—Ä–∏—Ç–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª-–≤–∞
    if plus_or_minus == 'increment':
        if amount < pr_count:
            count = types.InlineKeyboardButton(text=str(amount+1), callback_data=str(amount))
    elif plus_or_minus == 'decrement':
        if 1 < amount:
            count = types.InlineKeyboardButton(text=str(amount-1), callback_data=str(amount))
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(minus, count, plus)
    kb.row(back, to_cart)
    return kb
